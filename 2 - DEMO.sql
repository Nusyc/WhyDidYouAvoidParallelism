USE DEMO_PARALELISMO
GO

-- HINT PARALLEL PREFERENCE... POR QUE NAO RODOU EM PARALELO?
SELECT
	A.*,
	C.QTD
FROM
	CLIENTE A
CROSS APPLY	(
				SELECT
					COUNT(*) AS QTD
				FROM
					PEDIDO B
				WHERE
					A.ID_CLIENTE = B.ID_CLIENTE
			) C 
OPTION(RECOMPILE,USE HINT('ENABLE_PARALLEL_PLAN_PREFERENCE'))

-----------
-------- EXISTEM COLUNAS COMPUTADAS + UDF ?
-----------

select 
	object_name(object_id) as table_name,
    name as column_name,
	definition
from
	sys.computed_columns
where
	object_id IN (
					OBJECT_ID('PEDIDO'),OBJECT_ID('CLIENTE')
				 )

-- DROPANDO COLUNA COMPUTADA PARA TESTE
ALTER TABLE PEDIDO DROP COLUMN DATA_FORMATADA
------------------
-- NOVO TESTE SEM A COLUNA COMPUTADA QUE UTILIZA UMA UDF.
------------------
SELECT
	A.*,
	C.QTD
FROM
	CLIENTE A
CROSS APPLY	(
				SELECT
					COUNT(*) AS QTD
				FROM
					PEDIDO B
				WHERE
					A.ID_CLIENTE = B.ID_CLIENTE
			) C 
OPTION(RECOMPILE,USE HINT('ENABLE_PARALLEL_PLAN_PREFERENCE'))

-- VOLTANDO COLUNA COMPUTADA + UDF.
ALTER TABLE PEDIDO ADD DATA_FORMATADA AS dbo.fn_formata_data(DT_CADASTRO)

--- POSSIVEL SOLUÇÃO PARA OBTER O PARALELISMO? SIM, EM ALGUNS CASOS COM VIEW INDEXADA.
GO
CREATE VIEW VW_PEDIDO
WITH SCHEMABINDING
AS

SELECT
	 COUNT_BIG(*) AS QTD
	,A.ID_CLIENTE
FROM
	dbo.PEDIDO A 
GROUP BY
	A.ID_CLIENTE

GO
CREATE UNIQUE CLUSTERED INDEX IX_CLUSTERED ON VW_PEDIDO (ID_CLIENTE)
---
SELECT
	A.*,
	C.QTD
FROM
	CLIENTE A
CROSS APPLY	(
				SELECT
					QTD
				FROM
					VW_PEDIDO B WITH (NOEXPAND)
				WHERE
					A.ID_CLIENTE = B.ID_CLIENTE
			) C 
OPTION(RECOMPILE,USE HINT('ENABLE_PARALLEL_PLAN_PREFERENCE'))

